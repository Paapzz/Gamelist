name: Update HLTB Data

on:
  # Запуск раз в год - 20 января в 00:00 UTC
  schedule:
    - cron: '0 0 20 1 *'
  
  # Ручной запуск
  workflow_dispatch:

jobs:
  update-hltb:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install playwright requests
          playwright install chromium
      
      - name: Run HLTB scraper
        run: |
          python hltb_worker.py
        continue-on-error: true
      
      - name: Generate report
        run: |
          # Создаем отчет
          python -c "
          import json
          from datetime import datetime
          
          # Загружаем результаты
          try:
              with open('hltb_data/hltb_data.json', 'r', encoding='utf-8') as f:
                  games_data = []
                  for line in f:
                      if line.strip():
                          games_data.append(json.loads(line))
              
              # Статистика
              total_games = len(games_data)
              successful = len([g for g in games_data if 'hltb' in g])
              success_rate = (successful / total_games * 100) if total_games > 0 else 0
              
              # Создаем отчет
              report = {
                  'timestamp': datetime.now().isoformat(),
                  'total_games': total_games,
                  'successful_games': successful,
                  'failed_games': total_games - successful,
                  'success_rate': f'{success_rate:.1f}%',
                  'test_mode': 'false'
              }
              
              with open('scraping_report.json', 'w', encoding='utf-8') as f:
                  json.dump(report, f, indent=2, ensure_ascii=False)
              
              print(f'Отчет создан: {successful}/{total_games} игр ({success_rate:.1f}%)')
              
          except Exception as e:
              print(f'Ошибка создания отчета: {e}')
          "
        continue-on-error: true
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hltb-data-${{ github.run_number }}
          path: |
            hltb_data/hltb_data.json
            scraping_report.json
          retention-days: 30
      
      - name: Commit and push results
        run: |
          # Настраиваем git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Добавляем файлы
          git add hltb_data/hltb_data.json
          git add scraping_report.json
          git add index111.html
          
          # Защита от конфликтов - синхронизируем с удаленным репозиторием
          git pull --rebase origin main
          
          # Коммитим только если есть изменения
          git diff --quiet && git diff --staged --quiet || (git commit -m "🤖 Update HLTB data - $(date '+%Y-%m-%d %H:%M:%S UTC')
          
          - Total games: $(jq '.total_games' scraping_report.json)
          - Success rate: $(jq -r '.success_rate' scraping_report.json)
          - Test mode: $(jq -r '.test_mode' scraping_report.json)
          
          Generated by GitHub Actions workflow #${{ github.run_number }}" && git push)
      
      
      - name: Create summary
        run: |
          # Создаем краткое резюме
          if [ -f "scraping_report.json" ]; then
            echo "## HLTB Scraping Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Total Games | $(jq '.total_games' scraping_report.json) |" >> $GITHUB_STEP_SUMMARY
            echo "| Successful | $(jq '.successful_games' scraping_report.json) |" >> $GITHUB_STEP_SUMMARY
            echo "| Failed | $(jq '.failed_games' scraping_report.json) |" >> $GITHUB_STEP_SUMMARY
            echo "| Success Rate | $(jq -r '.success_rate' scraping_report.json) |" >> $GITHUB_STEP_SUMMARY
            echo "| Test Mode | $(jq -r '.test_mode' scraping_report.json) |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Artifacts:** hltb-data-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "Отчет не найден" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true
