#!/usr/bin/env python3
"""
Тест для проверки функции update_html_with_hltb
"""

import json
import os
import shutil
from hltb_worker_TESTING import update_html_with_hltb, extract_games_list

def test_html_update():
    """Тестирует функцию обновления HTML файла"""
    
    # Создаем резервную копию оригинального файла
    original_file = "index111.html"
    backup_file = "index111_backup.html"
    
    if os.path.exists(original_file):
        shutil.copy2(original_file, backup_file)
        print(f"[OK] Создана резервная копия: {backup_file}")
    else:
        print(f"[ERROR] Файл {original_file} не найден!")
        return False
    
    try:
        # Извлекаем текущий список игр
        print("[INFO] Извлекаем текущий список игр...")
        games_list = extract_games_list(original_file)
        print(f"[OK] Извлечено {len(games_list)} игр")
        
        # Добавляем тестовые HLTB данные к первым 3 играм
        print("[INFO] Добавляем тестовые HLTB данные...")
        for i in range(min(3, len(games_list))):
            games_list[i]["hltb"] = {
                "ms": {"t": "10h", "p": 100},
                "mpe": {"t": "15h", "p": 50},
                "comp": {"t": "20h", "p": 25},
                "hltb_id": f"test_{i+1}"
            }
        
        # Обновляем HTML файл
        print("[INFO] Обновляем HTML файл...")
        result = update_html_with_hltb(original_file, games_list)
        
        if result:
            print("[OK] HTML файл успешно обновлен!")
            
            # Проверяем, что файл можно прочитать обратно
            print("[INFO] Проверяем обновленный файл...")
            updated_games = extract_games_list(original_file)
            print(f"[OK] Обновленный файл содержит {len(updated_games)} игр")
            
            # Проверяем, что HLTB данные сохранились
            hltb_count = 0
            for game in updated_games[:3]:
                if "hltb" in game and game["hltb"].get("hltb_id", "").startswith("test_"):
                    hltb_count += 1
            
            if hltb_count == 3:
                print("[OK] HLTB данные успешно сохранены!")
                return True
            else:
                print(f"[ERROR] HLTB данные не сохранились. Найдено: {hltb_count}/3")
                return False
        else:
            print("[ERROR] Не удалось обновить HTML файл")
            return False
            
    except Exception as e:
        print(f"[ERROR] Ошибка тестирования: {e}")
        return False
    
    finally:
        # Восстанавливаем оригинальный файл
        if os.path.exists(backup_file):
            shutil.move(backup_file, original_file)
            print(f"[INFO] Восстановлен оригинальный файл: {original_file}")

if __name__ == "__main__":
    print("[TEST] Запуск теста функции update_html_with_hltb...")
    success = test_html_update()
    
    if success:
        print("[SUCCESS] Тест прошел успешно!")
    else:
        print("[FAILED] Тест не прошел!")
